function p = dfnonconform(minboxw, cali, rcali, lmin, lmax)% Estimate fraction nonconforming for each tomatoe size%   mu = mean simulated distribution%   sigma = standard deviation simulated distribution%   cali = tomatoe grades%   lmin = lower weight for tomatoe grade%   lmax = upper weight for tomatoe grade% Generate random sample of tomatoes weightsM = tomatornd(5000000, 1);% Estimate change in nonconforming fractionNC = length(cali);p = zeros(NC, 1) ;for i = 1:NC  if (rcali(i) == 1)    % Default is two intervals    onebin = 0;    % Modify only one interval?    if (i == NC)      onebin = 1;    else      onebin = (rcali(i+1) == 0);    endif    % Solve one bin    if (onebin == 1)      Mc1 = M((M >= (lmin(i)-1)) & (M < lmax(i)));      ncajas1 = floor(length(Mc1)/cali(i));      if (ncajas1 ~= 0)        MR1 = reshape(Mc1(1:(cali(i)*ncajas1)), cali(i), ncajas1);        pcaja1 = sum(MR1)';        p1 = sum(pcaja1 < minboxw)/length(pcaja1);        p(i) = p1;      else        p(i) = -1;      endif    else % Solve two bins      Mc1 = M((M >= (lmin(i)-1)) & (M < lmax(i)));      Mc2 = M((M >= lmin(i+1)) & (M < lmax(i+1)-1));      ncajas1 = floor(length(Mc1)/cali(i));      ncajas2 = floor(length(Mc2)/cali(i+1));      if (ncajas1 ~= 0 & ncajas2 ~= 0)         MR1 = reshape(Mc1(1:(cali(i)*ncajas1)), cali(i), ncajas1);        pcaja1 = sum(MR1)';        p1 = sum(pcaja1 < minboxw)/length(pcaja1);        MR2 = reshape(Mc2(1:(cali(i+1)*ncajas2)), cali(i+1), ncajas2);        pcaja2 = sum(MR2)';        p2 = sum(pcaja2 < minboxw)/length(pcaja2);        p(i) = max(p1, p2);      else        p(i) = -1;      endif    endif  else    p(i) = 1;  endif endforendfunction