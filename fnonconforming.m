function [p wbox pilon] = fnonconforming(wboxmin, wboxmax, cali, lmin, lmax)% Estimate fraction nonconforming for each tomatoe size%   mu = mean simulated distribution%   sigma = standard deviation simulated distribution%   cali = tomatoe grades%   lmin = lower weight for tomatoe grade%   lmax = upper weight for tomatoe grade% Generate random sample of tomatoe weightsM = tomatornd(2500000, 1);NC = length(cali);p = zeros(NC, 1) ;pilon = zeros(NC, 1);wbox = zeros(NC, 1);for i = 1:NC   Mc = M(M >= lmin(i) & M < lmax(i));   ncajas = floor(length(Mc)/cali(i));   pilon(i) = mean(Mc - (wboxmax/cali(i)))*cali(i);   if (ncajas ~= 0)       MR = reshape(Mc(1:(cali(i)*ncajas)), cali(i), ncajas);      pcaja = sum(MR)' ;      wbox(i) = mean(pcaja);      p(i) = sum(pcaja < wboxmin)/length(pcaja);   elseif      p(i) = -1;   endifendforendfunction